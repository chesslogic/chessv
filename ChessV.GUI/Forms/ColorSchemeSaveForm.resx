<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACxIAAAsSAdLdfvwAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfeAhsAIDZDBuU6
        AAAD40lEQVQ4T32Ua2wUVRTHzzx2d2a2ne3usk9ahIVdWxdKDFCbEKCm6coiRLQ2+MVPWomgEKK2EMEP
        QkLUtGlCSkmVR0AhgCgvoQVawFa0DVZbCk1rLa8ldafFCmhric7xzHS32d3Ufvjl3rnnzP+ce+85FxAR
        Eul4Y93K1ty501PXU7+7S9fmXS56fmHqepLYuxxf8EvtXrweXqacBJD+T/QUQGb366XD51965e/1AEnB
        xwX9AMVbn8rFv/YcxEdVNdhgtw2eTnHWAnwJMP+73LnqSNUuHPpkB67NzMInAPLjwXXBLINU8OLMAI6u
        eQcfvPY2PiRG39+GDRbL4PGETL+izJr9T6qP3yrTfTTfx+s24gKnGx3A65nCy4F5gZ2l7+Hwpg8xuvg5
        VJaEx1i8FO8XrcB62azsBHDVAsy+6PMPDxUuJ/vScb8oze+GVuLG8KrR5dOCDgg5fUIO8DVvBoLYT9zM
        mkH4xsicgQO587D92cJbLb5ZI8qsbOyL22LjPV82Fjs86hxG3PyCN8egb1kAMNgBKle7vfirLGMHz41z
        jea/FxRhxDMVtXmirUcUcJk5DTMAykUATt9y/DBdHGfMI9GPrFPwqijhN2Q6Q2hjfcI8vnbFYMQy0azO
        J7E0ltPFkgS1jzBlWgJQs8M2Bc/yBqQbnZA6lsUtoojkuzkUy2xCQW0xh2X5Cou1SqmoxkaGxc9JNM5+
        LVuWw5YVJepWQSpbxDD8pIWtGbfQbR6QM9QL9PPuGHto3Et8RnxKNKTJuEsQo5sA3JMKfkx1dtLlHa7n
        eTxMPx4jqA7xRIyvY0eg2ZqtdtwnmZVtKR01fikV1AGnMmxqo9GE1Hb6RTQSl4lemx170i14ScuOqIsF
        aKK1Q6I4uD2ho3TBL2RL5lmrTf2WLuscOTcRrcRPxE3KdiD/mX+U2cF/ezke22jth1ggLehVixWPSNLg
        YWas96Hp6Xzfb/sOjnS4PXiRHFqIDqKbuG9Oxzt2G97gYUOXidsedTlRkczYRbafie9jGbe5vNi+6tWB
        Oj91SvOScPp5gNOtThe2UYaa8y3iD0FAElDbqTQuMQxHGRspUI3iceOQyYR95NNJtNERXbFatZrdfcwz
        TdC3TM+RRLd6tNfpwAiVygjV2B2LjD0slHeyYx2g0cmBoZuFyn7ye0SiERJrp86irVcfATAlFfYFlkn/
        kYGjD4tL8M9QSL3NQ3mXQIeW8gD3Cpyxj4PKBwE/DgSD2MpCdR3DCBMW9g3KVCksPBcNZn9wO6UDEoXJ
        ZlAWLaztz1uwn7ZtTLQlvdia4d5Ur9zvcujpT0bEbpEiNtmc6vMf3g81mK15i/EAAAAASUVORK5CYII=
</value>
  </data>
</root>