<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="label4.Text" xml:space="preserve">
    <value>Variation controls the extent to which the engine will make different moves in the same situation.
Set to none, ChessV will make exactly the same move every time under the same circumstances.
Higher levels of Variation can decrease the strength of the engine.</value>
  </data>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="btnCancel.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAABQAAAAUCAYAAACNiR0NAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAACwwAAAsMAT9AIsgAAAAGYktHRAD/AP8A/6C9p5MAAAAHdElNRQfeAhsAIDZDBuU6
        AAAD4ElEQVQ4T32Ua2wUVRTHzzx2d2a2ne3usk9ahJVdWxdLDFCbEKCm6coiRLQ2+MVPWoyiGKO2EMEP
        QkLUtGlCSkmVR0AhgPgAlBZoAaloGyi0VprWWh4uqTstVkBbS3SOZ6Y7dWdj/PCbuXP//zn33LnnDCCi
        ie7Va1d2FM6dmTmfSV/lmqKzZY8vzJw3PbzB8SU/Nu7CH+LLlCMAUrqWzlGA3L7nK8dOPvXMn68CmBaf
        GoQByjc9WIh/7NyHd+sasMXtGjmWYdb4BGD+N4Vz1fG67Tj6/lZck5uH9wEUG7p+ybNIJU/eH8GJl17H
        28+9gneIibc2Y4vDMfJ5WqafUmZt4QfUey9X6R7Ne2/tOlzg9aMHeH1xeDoyL7Kt8k0cW/8OJhc/hsqS
        +CSLl+KtshXYLNuVbQC+RoA5p0PhsdHS5aQvnfIlafxzbCWui6+aWD4j6oGYNyQUAN/wYiSKQ8TVvFlE
        aJLcWThcOA+7Hi291h6aPa7MzsdBQ0txM5SP5Z6A+hAjbngiWGDRtyIAWNwAtS/4g/iTLGM3z03xPfFr
        SRkmAtP1cbrWLwq4zJ6FOQDVIgCnb9n4Pj6OsxZR0Hed0/CCKOGXJH1FaPfmtLFxP2+xYpVoV+dTsCyW
        04OZAmrEKdMKgIatrml4nLcgneh/0sSyuFEUkbwbYqnMDEwBNQpYlq9xOOuUmnpsZVj8iCwGe4hmlsP2
        FRXqJkGqWsQwfOb7pgeNjXSae+Uc9RRJO1LsJHYRHxIfEC1ZMm4XxOR6AH/m+6aH96jOjviCY808jwdI
        OkxQHeIXKT4jtC1rWpvTjbslu7I5o6OmBjXUAUdzXGqr1YbUdvpBtBJniQGXG/uzHXiGxi1EE6EtcI7m
        9oviyJa0jtIvH8uO3ONOl/o1HdYJzUh0EJeIq5TtcPEjfylzon8PcDx20tx3hLaQtugFhxMPStLIAWYy
        Uzj3cHHol937xrv9ATxNhnaim+gjbtmz8YbbhVd4eK3Xxm1J+ryoSHbsJe0y8S2hZdzpC2LXqmeHm8LU
        KW1L4tknAY51eH3YSRlq5mvEb4KAFEDtotI4wzAcZWylhRqUgB9HbTYcJE+PFow+0XmnU6vPHYcDMwR9
        y/Q7kuhUDw14PZigUhmnGrvhkLGfheoe9t866+HA0sdC7RD57lLQBAXros6irdcfBLDpWzbMp1gm+yID
        h+6UV+DvsZh6nYfqXoE+Wko3GBA46yAHtbcjYRyORrGDhfomhhEM3WS+QpkqpaUnktH8t69ndEA6pFmU
        RQsbh4oW7KFtW9M1k1Hj5vSgPOTz6On/Hwm3Q0q4ZLt5HuEf3g81mFL+Sc8AAAAASUVORK5CYII=
</value>
  </data>
</root>